# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
# ZSH_THEME="robbyrussell"
ZSH_THEME="agnoster"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    git
    autojump
    python
    pip
    github
    zsh-syntax-highlighting
    zsh-autosuggestions
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

autoload -U promptinit; promptinit
prompt pure

### alias
alias hssh='ssh -l hipbone 112.175.46.203 -p 443'
alias dssh='ssh -l dbcnqnfrksmd -o StrictHostKeyChecking=no'
alias chefssh='ssh -l dbcnqnfrksmd -o StrictHostKeyChecking=no chefw-server-01.com2us.kr'
alias vmanage='ssh -l dbcnqnfrksmd -o StrictHostKeyChecking=no vsphere-manage-01.com2us.kr'
alias dns='ssh -l dbcnqnfrksmd -o StrictHostKeyChecking=no 119.205.200.201'
alias mount_io='mount_smbfs //hipbone@172.18.99.21/io ~/io'
alias f_server='ssh -l dbcnqnfrksmd -o StrictHostKeyChecking=no 172.18.99.21'

# 시스템팀 Chef 관리용
alias chef_recipe="chef generate recipe -m 'hipbone@gamevilcom2us.com' -C 'hipbone' -g '/Users/hipbone/git_repo/chef-repo/cookbooks/skeletons'"
alias chef_cookbook="chef generate cookbook -m 'hipbone@gamevilcom2us.com' -C 'hipbone' -g '/Users/hipbone/git_repo/chef-repo/cookbooks/skeletons'"
alias chef_attr="chef generate attribute -m 'hipbone@gamevilcom2us.com' -C 'hipbone' -g '/Users/hipbone/git_repo/chef-repo/cookbooks/skeletons'"
alias chef_template="chef generate template -m 'hipbone@gamevilcom2us.com' -C 'hipbone' -g '/Users/hipbone/git_repo/chef-repo/cookbooks/skeletons'"
alias chef_file="chef generate file -m 'hipbone@gamevilcom2us.com' -C 'hipbone' -g '/Users/hipbone/git_repo/chef-repo/cookbooks/skeletons'"
alias chef_resource="chef generate resource -m 'hipbone@gamevilcom2us.com' -C 'hipbone' -g '/Users/hipbone/git_repo/chef-repo/cookbooks/skeletons'"

# SRE Chef 관리용
alias sre_cookbook="chef generate cookbook -m 'hipbone@gamevilcom2us.com' -C 'hipbone' -g '/Users/hipbone/git_repo/chef/cookbooks/skeletons'"
alias sre_recipe="chef generate recipe -m 'hipbone@gamevilcom2us.com' -C 'hipbone' -g '/Users/hipbone/git_repo/chef/cookbooks/skeletons'"
alias sre_attr="chef generate attribute -m 'hipbone@gamevilcom2us.com' -C 'hipbone' -g '/Users/hipbone/git_repo/chef/cookbooks/skeletons'"
alias sre_template="chef generate template -m 'hipbone@gamevilcom2us.com' -C 'hipbone' -g '/Users/hipbone/git_repo/chef/cookbooks/skeletons'"
alias sre_file="chef generate file -m 'hipbone@gamevilcom2us.com' -C 'hipbone' -g '/Users/hipbone/git_repo/chef/cookbooks/skeletons'"
alias sre_resource="chef generate resource -m 'hipbone@gamevilcom2us.com' -C 'hipbone' -g '/Users/hipbone/git_repo/chef/cookbooks/skeletons'"
alias sre_policyfile="chef generate policyfile -m 'hipbone@gamevilcom2us.com' -C 'hipbone' -g '/Users/hipbone/git_repo/chef/cookbooks/skeletons'"

alias dcsshX="csshX -l dbcnqnfrksmd --hosts"

# performance
alias pcurl='curl -o /dev/null -w "http_code: %{http_code} \ntotal_time : %{time_total} \ndns_lookup : %{time_namelookup} \nappconnect_time : %{time_appconnect} \n"'

# pyenv
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# autoenv
source $(brew --prefix autoenv)/activate.sh

export CLICOLOR=1

# chef dk
# eval "$(chef shell-init bash)"
eval "$(chef shell-init zsh)"
export PATH=/Users/hipbone/git_repo/chef-repo/bin:$PATH

# 신규 Chef
export PATH=/Users/hipbone/git_repo/chef/bin:$PATH

# chef script
export PATH=/Users/hipbone/git_repo/script/chef:$PATH

# miniconda bin path
export PATH=/miniconda3/bin:$PATH

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

